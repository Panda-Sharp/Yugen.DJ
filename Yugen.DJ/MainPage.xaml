<Page x:Class="Yugen.DJ.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:local="using:Yugen.DJ"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:canvas="using:Microsoft.Graphics.Canvas.UI.Xaml"
      xmlns:System="using:System"
      xmlns:viewmodels="using:Yugen.DJ.ViewModels"
      xmlns:visualizer="using:AudioVisualizer"
      mc:Ignorable="d"
      Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
      Loaded="OnLoaded"
      Unloaded="OnUnloaded">

    <Page.DataContext>
        <viewmodels:MainViewModel x:Name="ViewModel" />
    </Page.DataContext>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid Grid.Column="0">

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0"
                       Text="{x:Bind ViewModel.VinylLeft.Position, Mode=OneWay}" />
            
            <TextBlock Grid.Column="1"
                       Text="{x:Bind ViewModel.VinylLeft.BPM, Mode=OneWay}" />

            <TextBlock Grid.Column="2"
                       HorizontalAlignment="Right"
                       Text="{x:Bind ViewModel.VinylLeft.NaturalDuration, Mode=OneWay}" />

            <canvas:CanvasControl x:Name="LeftWaveFormCanvas"
                                  Grid.Row="1"
                                  Grid.ColumnSpan="3"
                                  Draw="{x:Bind LeftVinylRenderer.OnCanvasDraw}"
                                  Height="100"
                                  Width="500" />

            <TextBlock Grid.Row="2"
                       Text="{x:Bind ViewModel.VinylLeft.Artist, Mode=OneWay}" />

            <TextBlock Grid.Row="2"
                       Grid.Column="2"
                       HorizontalAlignment="Right"
                       Text="{x:Bind ViewModel.VinylLeft.Title, Mode=OneWay}" />

        </Grid>

        <StackPanel Grid.Column="1"
                    Grid.ColumnSpan="3">

            <Slider Grid.Row="2"
                    Grid.Column="4"
                    Header="Master Volume"
                    Minimum="0"
                    Maximum="100"
                    TickFrequency="10"
                    TickPlacement="Outside"
                    Value="{x:Bind ViewModel.MasterVolume, Mode=TwoWay}"
                    Width="200" />

        </StackPanel>

        <Grid Grid.Column="4">

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>

            <TextBlock Grid.Column="0"
                       Text="{x:Bind ViewModel.VinylRight.Position, Mode=OneWay}" />

            <TextBlock Grid.Column="1"
                       Text="{x:Bind ViewModel.VinylRight.BPM, Mode=OneWay}" />

            <TextBlock Grid.Column="2"
                       HorizontalAlignment="Right"
                       Text="{x:Bind ViewModel.VinylRight.NaturalDuration, Mode=OneWay}" />

            <canvas:CanvasControl x:Name="RightWaveFormCanvas"
                                  Grid.Row="1"
                                  Grid.ColumnSpan="3"
                                  Draw="{x:Bind RightVinylRenderer.OnCanvasDraw}"
                                  Height="100"
                                  Width="500" />

            <TextBlock Grid.Row="2"
                       Text="{x:Bind ViewModel.VinylRight.Artist, Mode=OneWay}" />

            <TextBlock Grid.Row="2"
                       Grid.Column="2"
                       HorizontalAlignment="Right"
                       Text="{x:Bind ViewModel.VinylRight.Title, Mode=OneWay}" />

        </Grid>


        <canvas:CanvasAnimatedControl x:Name="LeftCanvasAnimatedControl"
                                      Grid.Row="1"
                                      Grid.Column="0"
                                      CreateResources="{x:Bind LeftVinylRenderer.OnCreateResources}"
                                      Draw="{x:Bind LeftVinylRenderer.OnDraw}"
                                      PointerPressed="{x:Bind LeftVinylRenderer.OnPointerPressed}"
                                      PointerMoved="{x:Bind LeftVinylRenderer.OnPointerMoved}"
                                      PointerReleased="{x:Bind LeftVinylRenderer.OnPointerReleased}" />

        <StackPanel Grid.Row="1"
                    Grid.Column="1">

            <ToggleButton IsChecked="{x:Bind ViewModel.VinylLeft.IsHeadPhones, Mode=TwoWay}"
                          Style="{StaticResource HeadphonesToggleButtonStyle}">
                <FontIcon Glyph="{StaticResource HeadPhonesIcon}" />
            </ToggleButton>

            <Slider Header="Volume"
                    Height="400"
                    Orientation="Vertical"
                    TickFrequency="10"
                    TickPlacement="Outside"
                    Value="{x:Bind ViewModel.VinylLeft.Volume, Mode=TwoWay}" />

        </StackPanel>

        <StackPanel Grid.Row="1"
                    Grid.Column="2">

            <ComboBox Header="Master Audio Device:"
                      ItemsSource="{x:Bind ViewModel.AudioDeviceInformationCollection, Mode=OneWay}"
                      SelectedItem="{x:Bind ViewModel.MasterAudioDeviceInformation, Mode=TwoWay}"
                      DisplayMemberPath="Name"
                      Margin="5"
                      Width="200" />

            <ComboBox Header="Headphones Audio Device:"
                      ItemsSource="{x:Bind ViewModel.AudioDeviceInformationCollection, Mode=OneWay}"
                      SelectedItem="{x:Bind ViewModel.HeadphonesAudioDeviceInformation, Mode=TwoWay}"
                      DisplayMemberPath="Name"
                      Margin="5"
                      Width="200" />

            <Grid>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <visualizer:DiscreteVUBar x:Name="LeftVUBarChannel0"
                                          Grid.Column="0"
                                          ChannelIndex="0"
                                          Height="100"
                                          Width="10"
                                          Levels="{x:Bind ViewModel.VinylLeft.Levels}"
                                          ElementShadowColor="{x:Bind ViewModel.VinylLeft.ElementShadowColor}"
                                          ElementShadowBlurRadius="{x:Bind ViewModel.VinylLeft.ElementShadowBlurRadius}"
                                          ElementShadowOffset="{x:Bind ViewModel.VinylLeft.ElementShadowOffset}" />
                <visualizer:DiscreteVUBar x:Name="LeftVUBarChannel1"
                                          Grid.Column="1"
                                          ChannelIndex="1"
                                          Height="100"
                                          Width="10"
                                          Levels="{x:Bind ViewModel.VinylLeft.Levels}"
                                          ElementShadowColor="{x:Bind ViewModel.VinylLeft.ElementShadowColor}"
                                          ElementShadowBlurRadius="{x:Bind ViewModel.VinylLeft.ElementShadowBlurRadius}"
                                          ElementShadowOffset="{x:Bind ViewModel.VinylLeft.ElementShadowOffset}"/>

                <visualizer:DiscreteVUBar x:Name="RightVUBarChannel0"
                                          Grid.Column="3"
                                          ChannelIndex="0"
                                          Height="100"
                                          Width="10"
                                          Levels="{x:Bind ViewModel.VinylRight.Levels}"
                                          ElementShadowColor="{x:Bind ViewModel.VinylRight.ElementShadowColor}"
                                          ElementShadowBlurRadius="{x:Bind ViewModel.VinylRight.ElementShadowBlurRadius}"
                                          ElementShadowOffset="{x:Bind ViewModel.VinylRight.ElementShadowOffset}" />
                <visualizer:DiscreteVUBar x:Name="RightVUBarChannel1"
                                          Grid.Column="4"
                                          ChannelIndex="1"
                                          Height="100"
                                          Width="10"
                                          Levels="{x:Bind ViewModel.VinylRight.Levels}"
                                          ElementShadowColor="{x:Bind ViewModel.VinylRight.ElementShadowColor}"
                                          ElementShadowBlurRadius="{x:Bind ViewModel.VinylRight.ElementShadowBlurRadius}"
                                          ElementShadowOffset="{x:Bind ViewModel.VinylRight.ElementShadowOffset}" />
            </Grid>

        </StackPanel>

        <StackPanel Grid.Row="1"
                    Grid.Column="3">

            <ToggleButton IsChecked="{x:Bind ViewModel.VinylRight.IsHeadPhones, Mode=TwoWay}"
                          Style="{StaticResource HeadphonesToggleButtonStyle}">
                <FontIcon Glyph="{StaticResource HeadPhonesIcon}" />
            </ToggleButton>

            <Slider Header="Volume"
                    Height="400"
                    Orientation="Vertical"
                    TickFrequency="10"
                    TickPlacement="Outside"
                    Value="{x:Bind ViewModel.VinylRight.Volume, Mode=TwoWay}" />

        </StackPanel>

        <canvas:CanvasAnimatedControl x:Name="RightCanvasAnimatedControl"
                                      Grid.Row="1"
                                      Grid.Column="4"
                                      CreateResources="{x:Bind RightVinylRenderer.OnCreateResources}"
                                      Draw="{x:Bind RightVinylRenderer.OnDraw}"
                                      PointerPressed="{x:Bind RightVinylRenderer.OnPointerPressed}"
                                      PointerMoved="{x:Bind RightVinylRenderer.OnPointerMoved}"
                                      PointerReleased="{x:Bind RightVinylRenderer.OnPointerReleased}" />


        <Slider Grid.Row="2"
                Grid.Column="0"
                Header="Pitch"
                Minimum="-50"
                Maximum="+50"
                TickFrequency="10"
                TickPlacement="Outside"
                Value="{x:Bind ViewModel.VinylLeft.Pitch, Mode=TwoWay}"
                Width="400" />

        <Slider Grid.Row="2"
                Grid.Column="2"
                Header="Fader"
                Minimum="-10"
                Maximum="+10"
                TickFrequency="5"
                TickPlacement="Outside"
                Value="{x:Bind ViewModel.CrossFader, Mode=TwoWay}"
                Width="200" />

        <Slider Grid.Row="2"
                Grid.Column="4"
                Header="Pitch"
                Minimum="-50"
                Maximum="+50"
                TickFrequency="10"
                TickPlacement="Outside"
                Value="{x:Bind ViewModel.VinylRight.Pitch, Mode=TwoWay}"
                Width="400" />


        <StackPanel Grid.Row="3"
                    Orientation="Horizontal">

            <ToggleButton IsChecked="{x:Bind ViewModel.VinylLeft.IsPaused, Mode=TwoWay}"
                          Style="{ThemeResource PlayToggleButtonStyle}">
                <FontIcon Glyph="{x:Bind ViewModel.VinylLeft.PlayPauseButton, Mode=OneWay}" />
            </ToggleButton>

            <Button Command="{x:Bind ViewModel.VinylLeft.OpenButtonCommand}"
                    Background="Transparent"
                    Foreground="{StaticResource SystemColorHighlightBrush}">
                <FontIcon Glyph="{StaticResource EjectIcon}" />
            </Button>

        </StackPanel>

        <StackPanel Grid.Row="3"
                    Grid.Column="4"
                    Orientation="Horizontal">

            <ToggleButton IsChecked="{x:Bind ViewModel.VinylRight.IsPaused, Mode=TwoWay}"
                          Style="{ThemeResource PlayToggleButtonStyle}">
                <FontIcon Glyph="{x:Bind ViewModel.VinylRight.PlayPauseButton, Mode=OneWay}" />
            </ToggleButton>

            <Button Command="{x:Bind ViewModel.VinylRight.OpenButtonCommand}"
                    Background="Transparent"
                    Foreground="{StaticResource SystemColorHighlightBrush}">
                <FontIcon Glyph="{StaticResource EjectIcon}" />
            </Button>

        </StackPanel>

    </Grid>

</Page>
