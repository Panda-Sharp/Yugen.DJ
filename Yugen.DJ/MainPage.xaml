<Page x:Class="Yugen.DJ.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:local="using:Yugen.DJ"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:canvas="using:Microsoft.Graphics.Canvas.UI.Xaml"
      xmlns:System="using:System"
      xmlns:viewmodels="using:Yugen.DJ.ViewModels"
      mc:Ignorable="d"
      Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"
      Loaded="OnLoaded"
      Unloaded="OnUnloaded">
    
    <Page.DataContext>
        <viewmodels:DeckViewModel x:Name="ViewModel" />
    </Page.DataContext>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="auto" />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <canvas:CanvasAnimatedControl x:Name="AnimatedControl"
                                      Grid.Column="0"
                                      CreateResources="OnCreateResources"
                                      Draw="OnDraw"
                                      Paused="{x:Bind ViewModel.VinylLeft.IsPaused, Mode=OneWay}"
                                      TargetElapsedTime="{x:Bind ViewModel.VinylLeft.TargetElapsedTime, Mode=OneWay}" />

        <StackPanel Grid.Column="1">

            <ToggleButton Margin="5"
                          IsChecked="{x:Bind ViewModel.VinylLeft.IsHeadPhones, Mode=TwoWay}">
                <FontIcon Glyph="&#xE7F6;" />
            </ToggleButton>

            <Slider Header="Volume"
                    Height="400"
                    Orientation="Vertical"
                    TickFrequency="10"
                    TickPlacement="Outside"
                    Value="{x:Bind ViewModel.VinylLeft.Volume, Mode=TwoWay}" />
            
        </StackPanel>
        
        <StackPanel Grid.Column="2">

            <ComboBox Header="Master Audio Device:"
                      ItemsSource="{x:Bind ViewModel.AudioDeviceInformationCollection, Mode=OneWay}"
                      SelectedItem="{x:Bind ViewModel.MasterAudioDeviceInformation, Mode=TwoWay}"
                      DisplayMemberPath="Name"
                      Margin="5"
                      Width="200" />

            <ComboBox Header="Headphones Audio Device:"
                      ItemsSource="{x:Bind ViewModel.AudioDeviceInformationCollection, Mode=OneWay}"
                      SelectedItem="{x:Bind ViewModel.HeadphonesAudioDeviceInformation, Mode=TwoWay}"
                      DisplayMemberPath="Name"
                      Margin="5"
                      Width="200" />

        </StackPanel>
        
        <StackPanel Grid.Column="3">

            <ToggleButton Margin="5"
                          IsChecked="{x:Bind ViewModel.VinylRight.IsHeadPhones, Mode=TwoWay}">
                <FontIcon Glyph="&#xE7F6;" />
            </ToggleButton>

            <Slider Header="Volume"
                    Height="400"
                    Orientation="Vertical"
                    TickFrequency="10"
                    TickPlacement="Outside"
                    Value="{x:Bind ViewModel.VinylRight.Volume, Mode=TwoWay}" />
            
        </StackPanel>

        <canvas:CanvasAnimatedControl x:Name="AnimatedControl2"
                                      Grid.Column="4"
                                      CreateResources="OnCreateResources2"
                                      Draw="OnDraw2"
                                      Paused="{x:Bind ViewModel.VinylRight.IsPaused, Mode=OneWay}"
                                      TargetElapsedTime="{x:Bind ViewModel.VinylRight.TargetElapsedTime, Mode=OneWay}" />


        <Slider Grid.Row="1"
                Grid.Column="0"
                Header="Pitch"
                Minimum="-50"
                Maximum="+50"
                TickFrequency="10"
                TickPlacement="Outside"
                Value="{x:Bind ViewModel.VinylLeft.Pitch, Mode=TwoWay}"
                Width="400"/>

        <Slider Grid.Row="1"
                Grid.Column="2"
                Header="Fader"
                Minimum="-10"
                Maximum="+10"
                TickFrequency="5"
                TickPlacement="Outside"
                Value="{x:Bind ViewModel.CrossFader, Mode=TwoWay}" 
                Width="200"/>

        <Slider Grid.Row="1"
                Grid.Column="4"
                Header="Pitch"
                Minimum="-50"
                Maximum="+50"
                TickFrequency="10"
                TickPlacement="Outside"
                Value="{x:Bind ViewModel.VinylRight.Pitch, Mode=TwoWay}" 
                Width="400"/>

        
        <StackPanel Grid.Row="2"
                    Orientation="Horizontal">

            <ComboBox Header="TargetElapsedTime:"
                      ItemsSource="{x:Bind ViewModel.VinylLeft.TargetElapsedTimeList, Mode=OneWay}"
                      SelectedItem="{x:Bind ViewModel.VinylLeft.SelectedTargetElapsedTime, Mode=TwoWay}"
                      Margin="5" />

            <ToggleButton Content="Pause"
                          Margin="5"
                          IsChecked="{x:Bind ViewModel.VinylLeft.IsPaused, Mode=TwoWay}" />

            <Button Content="Open"
                    Command="{x:Bind ViewModel.VinylLeft.OpenButtonCommand}" />

        </StackPanel>
        
        <StackPanel Grid.Row="2"
                    Grid.Column="4"
                    Orientation="Horizontal">

            <ComboBox Header="TargetElapsedTime:"
                      ItemsSource="{x:Bind ViewModel.VinylRight.TargetElapsedTimeList, Mode=OneWay}"
                      SelectedItem="{x:Bind ViewModel.VinylRight.SelectedTargetElapsedTime, Mode=TwoWay}"
                      Margin="5" />

            <ToggleButton Content="Pause"
                          Margin="5"
                          IsChecked="{x:Bind ViewModel.VinylRight.IsPaused, Mode=TwoWay}" />

            <Button Content="Open"
                    Command="{x:Bind ViewModel.VinylRight.OpenButtonCommand}" />

        </StackPanel>

    </Grid>
</Page>
